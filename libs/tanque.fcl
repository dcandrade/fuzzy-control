/*
	Example: A tip calculation FIS (fuzzy inference system)
	Calculates tip based on 'servie' and 'food'

	If you want to about this example (and fuzzy logic), please 
	read Matlab's tutorial on fuzzy logic toolbox 
	http://www.mathworks.com/access/helpdesk/help/pdf_doc/fuzzy/fuzzy.pdf

									Pablo Cingolani 
									pcingola@users.sourceforge.net
*/

FUNCTION_BLOCK tipper	// Block definition (there may be more than one block per file)

VAR_INPUT
	dv : REAL; // diferença da vazão (saída - desejada)
	dt : REAL; // variação da temperatura (saída - desejada)
END_VAR

VAR_OUTPUT				// Define output variable
	vq : REAL; //hot water input
	vf : REAL; //cold water input
END_VAR

FUZZIFY dv			
	TERM above := (0, 0) (100,1);
        TERM ok := (-20, 0) (0, 1) (20,0);
	TERM below := (-100, 1) (0,0);
END_FUZZIFY

FUZZIFY dt			// Fuzzify input variable 'food': { 'rancid', 'delicious' }
	TERM above := (0, 0) (100,1);
        TERM ok := (-20, 0) (0, 1) (20,0);
	TERM below := (-100, 1) (0,0);
END_FUZZIFY

DEFUZZIFY vf			// Defzzzify output variable 'tip' : {'cheap', 'average', 'generous' }
	TERM more := (0, 0) (100,1);
        TERM ok := (-20, 0) (0, 1) (20,0);
	TERM less := (-100, 1) (0,0);
	
	METHOD : COG;		// Use 'Center Of Gravity' defuzzification method
	DEFAULT := 0;		// Default value is 0 (if no rule activates defuzzifier)
END_DEFUZZIFY

DEFUZZIFY vq		// Defzzzify output variable 'tip' : {'cheap', 'average', 'generous' }
	TERM more := (0, 0) (100,1);
        TERM ok := (-20, 0) (0, 1) (20,0);
	TERM less := (-100, 1) (0,0);
	
	METHOD : COG;		// Use 'Center Of Gravity' defuzzification method
	DEFAULT := 0;		// Default value is 0 (if no rule activates defuzzifier)
END_DEFUZZIFY

RULEBLOCK No1
	AND : MIN;			// Use 'min' for 'and' (also implicit use 'max' for 'or' to fulfill DeMorgan's Law)
	ACT : MIN;			// Use 'min' activation method
	ACCU : MAX;			// Use 'max' accumulation method

        // Case 1
        RULE 1 : IF dv IS above AND dt IS ok THEN vq IS less;
        RULE 2 : IF dv IS above AND dt IS ok THEN vf IS less;
        
        // Case 2:
        RULE 3 : IF dv IS above AND dt IS above THEN vq IS less;
        RULE 4 : IF dv IS above AND dt IS below THEN vf IS less;
        
        // Case 3:
        RULE 5 : IF dv IS ok AND dt IS above THEN vq IS less;
        RULE 6 : IF dv IS ok AND dt IS above THEN vf IS more;
        
        // Case 4:
        RULE 7 : IF dv IS ok AND dt IS below THEN vq IS more;
        RULE 8 : IF dv IS ok AND dt IS below THEN vf IS less;
        
<<<<<<< HEAD
        // Case 5:
=======
       // Case 5:
>>>>>>> e4abbbec0c21690db27a87a2fd4cbe0bfcdf2910
        RULE 9 : IF dv IS below AND dt IS ok THEN vq IS more;
        RULE 10 : IF dv IS below AND dt IS ok THEN vf IS more;
        
        // Case 6:
        RULE 11 : IF dv IS below AND dt IS above THEN vf IS more;
        RULE 12 : IF dv IS below AND dt IS below THEN vq IS more;
END_RULEBLOCK

END_FUNCTION_BLOCK

